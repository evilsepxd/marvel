{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SinglePage.js"],"names":["ErrorMessage","_jsx","alt","src","img","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByNameStart","_ref3","_callee3","name","_context3","char","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","price","prices","pageCount","language","textObjects","AppBanner","_jsxs","className","children","avengers","avengersLogo","SinglePage","Component","dataType","dataId","useParams","setData","_useMarvelService","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","Spinner","content","_Fragment"],"mappings":"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","file":"static/js/6.f857e3a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.30cecdf7.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img alt='Error' src={img} />\r\n\t);\r\n}\r\n\r\nexport default ErrorMessage;","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, error, request, clearError } = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=51611d0224175ec40de8f6fdd861731f';\r\n\tconst _baseCharactersOffset = 210;\r\n\tconst _baseComicsOffset = 8;\r\n\r\n\tconst getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharactersByNameStart = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=10&nameStartsWith=${name}&${_apiKey}`);\r\n\t\tif (res.data.results.length > 0) {\r\n\t\t\treturn res.data.results.map(char => {\r\n\t\t\t\treturn _transformCharacter(char);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn [{ name: null }];\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = _baseComicsOffset) => {\r\n\t\tconst res = await request(`${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\ttitle: comics.title,\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\tid: comics.id,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description ? comics.description : 'No description for this comic',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} pages` : 'No info about the number of pages',\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us'\r\n\t\t};\r\n\t}\r\n\r\n\treturn {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic, getCharactersByNameStart};\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport default function useHttp() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Couldn't fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch(e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn {loading, error, request, clearError};\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n\r\n\tconst { dataId } = useParams();\r\n\tconst [ data, setData ] = useState(null);\r\n\t\r\n\tconst { loading, error, getCharacter, getComic, clearError } = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateData();\r\n\t}, [dataId]);\r\n\r\n\tconst updateData = () => {\r\n\t\tclearError();\r\n\r\n\t\tswitch (dataType) {\r\n\t\t\tcase 'comic':\r\n\t\t\t\tgetComic(dataId).then(onDataLoaded);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'character':\r\n\t\t\t\tgetCharacter(dataId).then(onDataLoaded);\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst onDataLoaded = (data) => {\r\n\t\tsetData(data);\r\n\t}\r\n\r\n\tconst errorMessage = error ? <ErrorMessage/> : null;\r\n\tconst spinner = loading ? <Spinner/> : null;\r\n\tconst content = !(loading || error || !data) ? <Component data={data}/> : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner />\r\n\t\t\t{ errorMessage }\r\n\t\t\t{ spinner }\r\n\t\t\t{ content }\r\n\t\t</>\r\n\t);\r\n\r\n}\r\n\r\nexport default SinglePage;"],"sourceRoot":""}