{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/searchForm/SearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/CharactersPage.js"],"names":["ErrorMessage","_jsx","alt","src","img","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByNameStart","_ref3","_callee3","name","_context3","char","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","price","prices","pageCount","language","textObjects","View","_jsxs","className","children","style","match","objectFit","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","CSSTransition","in","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyDown","e","key","TransitionGroup","component","renderItems","disabled","display","Skeleton","_Fragment","slice","Link","to","resourceURI","CharInfo","charId","skeleton","Message","text","typeOfMessage","SuccessBlock","SearchForm","onCharsLoaded","successBlock","notFoundMessage","Formik","initialValues","validationSchema","Yup","required","onSubmit","setSubmitting","updateCharList","isSubmitting","Form","htmlFor","Field","placeholder","type","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","Characters","selectedChar","decoration"],"mappings":"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","file":"static/js/4.9cad7712.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.30cecdf7.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img alt='Error' src={img} />\r\n\t);\r\n}\r\n\r\nexport default ErrorMessage;","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, error, request, clearError } = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=51611d0224175ec40de8f6fdd861731f';\r\n\tconst _baseCharactersOffset = 210;\r\n\tconst _baseComicsOffset = 8;\r\n\r\n\tconst getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharactersByNameStart = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=10&nameStartsWith=${name}&${_apiKey}`);\r\n\t\tif (res.data.results.length > 0) {\r\n\t\t\treturn res.data.results.map(char => {\r\n\t\t\t\treturn _transformCharacter(char);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn [{ name: null }];\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = _baseComicsOffset) => {\r\n\t\tconst res = await request(`${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\ttitle: comics.title,\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\tid: comics.id,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description ? comics.description : 'No description for this comic',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} pages` : 'No info about the number of pages',\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us'\r\n\t\t};\r\n\t}\r\n\r\n\treturn {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic, getCharactersByNameStart};\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport default function useHttp() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Couldn't fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch(e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn {loading, error, request, clearError};\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState({});\n\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t}\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\t\tgetCharacter(id)\n\t\t.then(onCharLoaded)\n\t}\n\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading ? <Spinner/> : null;\n\tconst content = !(loading || error) ? <View char={char}/> : null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\tRandom character for today!<br/>\n\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\tOr choose another one\n\t\t\t\t</p>\n\t\t\t\t<button className=\"button button__main\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"inner\"\n\t\t\t\t\tonClick={updateChar}>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst View = ({char}) => {\n\tconst {name, description, thumbnail, homepage, wiki} = char;\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img src={thumbnail}\n\t\t\t\tstyle={thumbnail?.match('image_not_available.jpg') ? {objectFit: 'contain'} : null}\n\t\t\t\talt=\"Random character\"\n\t\t\t\tclassName=\"randomchar__img\"/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">{description ? description : 'Описание отсутствует'}</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst {loading, error, getAllCharacters} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tsetNewItemLoading(!initial);\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded);\n\t}\n\n\tconst onCharListLoaded = (newCharList = []) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList(charList => [...charList, ...newCharList]);\n\t\tsetNewItemLoading(false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(ended);\n\t}\n\n\tconst itemRefs = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n\t\titemRefs.current[id].classList.add('char__item_selected');\n\t\titemRefs.current[id].focus();\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = {'objectFit' : 'cover'};\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t\t\timgStyle = {'objectFit' : 'unset'};\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<CSSTransition key={i} in={true} timeout={1000} classNames='char__item' >\n\t\t\t\t\t<li className=\"char__item\"\n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\tref={(el) => itemRefs.current[i] = el}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyDown={e => {\n\t\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<TransitionGroup component={'ul'} className='char__grid' >\n\t\t\t\t{items}\n\t\t\t</TransitionGroup>\n\t\t);\n\t}\n\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{display: charEnded ? 'none' : 'block'}}\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = useState(null);\n\n\tconst {loading, error, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() => updateChar(), []);\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, [props.charId]);\n\n\tconst updateChar = () => {\n\t\tif (!props.charId) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearError();\n\t\tgetCharacter(props.charId)\n\t\t\t.then(onCharLoaded)\n\t}\n\t\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t}\n\n\tconst skeleton = char || loading || error ? null : <Skeleton/>;\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading ? <Spinner/> : null;\n\tconst content = !(loading || error || !char) ? <View char={char}/> : null;\n\n\treturn (\n\t\t<div className=\"char__info\">\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t)\n}\n\nconst View = ({char}) => {\n\tconst {name, description, thumbnail, homepage, wiki, comics} = char;\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={thumbnail}\n\t\t\t\t\talt={name}\n\t\t\t\t\tstyle={thumbnail?.match('image_not_available.jpg') ? {objectFit: 'contain'} : null}/>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">Homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">\n\t\t\t\t{description}\n\t\t\t</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t{comics?.length > 0 ? null : 'There is no comics with this character'}\n\t\t\t\t\t{\n\t\t\t\t\t\tcomics?.slice(0, 10).map((item, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Link key={i} className=\"char__comics-item\" to={`/comics/${item.resourceURI.match(/\\d*$/)}`}>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n\nCharInfo.propTypes = {\n    \tcharId: PropTypes.number\n};\n\nexport default CharInfo;","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './searchForm.scss';\r\n\r\nconst SearchForm = () => {\r\n\tconst  [ charList, setCharList ]  = useState(null);\r\n\tconst { loading, error, clearError, getCharactersByNameStart } = useMarvelService();\r\n\r\n\tconst onCharsLoaded = charList => {\r\n\t\tsetCharList(charList);\r\n\t}\r\n\r\n\tconst updateCharList = name => {\r\n\t\tclearError();\r\n\t\tgetCharactersByNameStart(name)\r\n\t\t.then(onCharsLoaded);\r\n\t}\r\n\r\n\tconst successBlock = !(error || loading) && charList?.[0].name && <SuccessBlock charList={charList} />\r\n\tconst errorMessage = error && <Message \r\n\t\t\t\t\t\t\ttext='Fetch error' \r\n\t\t\t\t\t\t\ttypeOfMessage='error' />;\r\n\tconst notFoundMessage = charList?.[0].name === null && <Message \r\n\t\t\t\t\t\t\t\t\ttext='The character was not found. Check the name and try again' \r\n\t\t\t\t\t\t\t\t\ttypeOfMessage='error' />;\r\n\t\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues = {{\r\n\t\t\t\tname: ''\r\n\t\t\t}}\r\n\t\t\tvalidationSchema = {\r\n\t\t\t\tYup.object({\r\n\t\t\t\t\tname: Yup.string()\r\n\t\t\t\t\t\t\t.required('This field is required')\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tonSubmit = {\r\n\t\t\t\t({ name }, {setSubmitting}) => {\r\n\t\t\t\t\tupdateCharList(name);\r\n\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\t({ isSubmitting }) => (\r\n\t\t\t\t\t<Form className='search-form'>\r\n\t\t\t\t\t\t<label className=\"search-form__title\" htmlFor='name'>\r\n\t\t\t\t\t\t\tOr find a character by name:\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\tclassName='search-form__input'\r\n\t\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\t\tid='name'\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tclassName='search-form__btn button button__main'\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"inner\">FIND</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{ successBlock }\r\n\t\t\t\t\t\t{ errorMessage }\r\n\t\t\t\t\t\t{ notFoundMessage }\r\n\t\t\t\t\t\t<ErrorMessage \r\n\t\t\t\t\t\t\tclassName='search-form__message search-form__message_error' \r\n\t\t\t\t\t\t\tname='name' \r\n\t\t\t\t\t\t\tcomponent='div' \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Formik>\r\n\t);\r\n}\r\n\r\nconst Message = ({text, typeOfMessage}) => {\r\n\treturn (\r\n\t\t<div className={`search-form__message search-form__message_${typeOfMessage}`}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst SuccessBlock = ({ charList }) => {\r\n\treturn (\r\n\t\t<div className=\"search-form__list\">\r\n\t\t\t{\r\n\t\t\t\tcharList.map((char, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link key={i} to={`/characters/${char.id}`}>\r\n\t\t\t\t\t\t\t<div className=\"search-form__list-item\">\r\n\t\t\t\t\t\t\t\t<img src={char.thumbnail} alt={char.name} className=\"search-form__list-item-img\" />\r\n\t\t\t\t\t\t\t\t<div className=\"search-form__list-item-name\">{char.name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchForm;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport SearchForm from \"../searchForm/SearchForm\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst Characters = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={selectedChar}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<SearchForm />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Characters;"],"sourceRoot":""}