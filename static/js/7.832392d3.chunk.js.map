{"version":3,"sources":["services/MarvelService.js","hooks/http.hook.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","loading","error","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByNameStart","_ref3","_callee3","name","_context3","char","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","price","prices","pageCount","language","textObjects","ErrorMessage","_jsx","alt","src","img","AppBanner","_jsxs","className","children","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","_useMarvelService","comicsList","setComicsList","_useState3","_useState4","setOffset","_useState5","_useState6","setNewItemLoading","_useState7","_useState8","ended","setEnded","useEffect","onRequest","initialValue","then","onComicsListLoaded","newComicsList","_toConsumableArray","arr","item","i","Link","to","renderItems","onClick","disabled","style","display","Comics","Helmet","content"],"mappings":"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","file":"static/js/7.832392d3.chunk.js","sourcesContent":["import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, error, request, clearError, process, setProcess } = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=51611d0224175ec40de8f6fdd861731f';\r\n\tconst _baseCharactersOffset = 210;\r\n\tconst _baseComicsOffset = 8;\r\n\r\n\tconst getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharactersByNameStart = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=10&nameStartsWith=${name}&${_apiKey}`);\r\n\t\tif (res.data.results.length > 0) {\r\n\t\t\treturn res.data.results.map(char => {\r\n\t\t\t\treturn _transformCharacter(char);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = _baseComicsOffset) => {\r\n\t\tconst res = await request(`${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\ttitle: comics.title,\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\tid: comics.id,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description ? comics.description : 'No description for this comic',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} pages` : 'No info about the number of pages',\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us'\r\n\t\t};\r\n\t}\r\n\r\n\treturn {loading, \r\n\t\t\terror, \r\n\t\t\tclearError, \r\n\t\t\tprocess, \r\n\t\t\tgetAllCharacters, \r\n\t\t\tgetCharacter, \r\n\t\t\tgetAllComics, \r\n\t\t\tgetComic, \r\n\t\t\tgetCharactersByNameStart, \r\n\t\t\tsetProcess};\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport default function useHttp() {\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Couldn't fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetProcess('confirmed');\r\n\t\t\treturn data;\r\n\t\t} catch(e) {\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {request, clearError, process, setProcess};\r\n}","export default __webpack_public_path__ + \"static/media/error.30cecdf7.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img alt='Error' src={img} />\r\n\t);\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn <Spinner/>;\n\t\tcase 'loading':\n\t\t\treturn newItemLoading ? <Component/> : <Spinner/>;\n\t\tcase 'confirmed':\n\t\t\treturn <Component/>;\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage/>;\n\t\tdefault:\n\t\t\tthrow new Error('Unexpected process state');\n\t}\n}\n\nconst ComicsList = () => {\n    \tconst { loading, error, clearError, getAllComics, process, setProcess } = useMarvelService();\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [offset, setOffset] = useState(8);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [ended, setEnded] = useState(false);\n\n\tuseEffect(() => {\n\t\tonRequest(false);\n\t}, []);\n\n\tconst onRequest = (initialValue) => {\n\t\tclearError();\n\t\tsetNewItemLoading(initialValue);\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded);\n\t}\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tif (newComicsList.length < 8) {\n\t\t\tsetEnded(true);\n\t\t}\n\n\t\tsetNewItemLoading(false);\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList]);\n\t\tsetOffset(offset => offset + 100)\n\t\tsetProcess('confirmed');\n\t}\n\n\tconst renderItems = (arr) => {\n\t\tconst items = arr.map((item, i) => {\n\n\t\t\treturn (\n\t\t\t\t<li key={i} className=\"comics__item\">\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}$</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"comics__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\t\t);\n\t}\n\n\t// const errorMessage = error ? <ErrorMessage/> : null;\n\t// const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\t// const list = renderItems(comicsList);\n\n\treturn (\n\t\t\t<div className=\"comics__list\">\n\t\t\t\t{\n\t\t\t\t\tsetContent(process, () => renderItems(comicsList), newItemLoading)\n\t\t\t\t}\n\t\t\t\t{/* {errorMessage}\n\t\t\t\t{spinner}\n\t\t\t\t{list} */}\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\t\tonClick={() => onRequest(true)}\n\t\t\t\t\tdisabled={newItemLoading}\n\t\t\t\t\tstyle={{display: ended ? 'none' : 'block'}}>\n\t\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t\t</button>\n\t\t\t</div>\n\t)\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst Comics = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Page with list of comics\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Comics page</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ComicsList />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Comics;"],"sourceRoot":""}