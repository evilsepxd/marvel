{"version":3,"sources":["services/MarvelService.js","hooks/http.hook.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/searchForm/SearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/CharactersPage.js"],"names":["useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","loading","error","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByNameStart","_ref3","_callee3","name","_context3","char","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","price","prices","pageCount","language","textObjects","ErrorMessage","_jsx","alt","src","img","Skeleton","_jsxs","_Fragment","children","className","setContent","Component","Spinner","View","style","match","objectFit","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","onCharLoaded","Math","floor","random","then","onClick","mjolnir","CharList","props","charList","setCharList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","arr","i","imgStyle","CSSTransition","in","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyDown","e","key","TransitionGroup","component","renderItems","disabled","display","slice","Link","to","resourceURI","CharInfo","charId","Message","text","typeOfMessage","SuccessBlock","SearchForm","onCharsLoaded","Formik","initialValues","validationSchema","Yup","required","onSubmit","updateCharList","Form","htmlFor","Field","placeholder","type","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Characters","selectedChar","Helmet","content","decoration"],"mappings":"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","file":"static/js/5.da90b36e.chunk.js","sourcesContent":["import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, error, request, clearError, process, setProcess } = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=51611d0224175ec40de8f6fdd861731f';\r\n\tconst _baseCharactersOffset = 210;\r\n\tconst _baseComicsOffset = 8;\r\n\r\n\tconst getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharactersByNameStart = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=10&nameStartsWith=${name}&${_apiKey}`);\r\n\t\tif (res.data.results.length > 0) {\r\n\t\t\treturn res.data.results.map(char => {\r\n\t\t\t\treturn _transformCharacter(char);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = _baseComicsOffset) => {\r\n\t\tconst res = await request(`${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\ttitle: comics.title,\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\tid: comics.id,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description ? comics.description : 'No description for this comic',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} pages` : 'No info about the number of pages',\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us'\r\n\t\t};\r\n\t}\r\n\r\n\treturn {loading, \r\n\t\t\terror, \r\n\t\t\tclearError, \r\n\t\t\tprocess, \r\n\t\t\tgetAllCharacters, \r\n\t\t\tgetCharacter, \r\n\t\t\tgetAllComics, \r\n\t\t\tgetComic, \r\n\t\t\tgetCharactersByNameStart, \r\n\t\t\tsetProcess};\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport default function useHttp() {\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Couldn't fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetProcess('confirmed');\r\n\t\t\treturn data;\r\n\t\t} catch(e) {\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {request, clearError, process, setProcess};\r\n}","export default __webpack_public_path__ + \"static/media/error.30cecdf7.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img alt='Error' src={img} />\r\n\t);\r\n}\r\n\r\nexport default ErrorMessage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","\r\nimport Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton'\r\n\r\nconst setContent = (process, Component, data) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn <Skeleton/>;\r\n\t\tcase 'loading':\r\n\t\t\treturn <Spinner/>;\r\n\t\tcase 'confirmed':\r\n\t\t\treturn <Component data={data}/>;\r\n\t\tcase 'error':\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nexport default setContent;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState({});\n\n\tconst { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t}\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\t\tgetCharacter(id)\n\t\t.then(onCharLoaded)\n\t\t.then(() => setProcess('confirmed'));\n\t}\n\n\t// const errorMessage = error ? <ErrorMessage/> : null;\n\t// const spinner = loading ? <Spinner/> : null;\n\t// const content = !(loading || error) ? <View char={char}/> : null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{\n\t\t\t\tsetContent(process, View, char)\n\t\t\t}\n\t\t\t{/* {errorMessage}\n\t\t\t{spinner}\n\t\t\t{content} */}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\tRandom character for today!<br/>\n\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\tOr choose another one\n\t\t\t\t</p>\n\t\t\t\t<button className=\"button button__main\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"inner\"\n\t\t\t\t\tonClick={updateChar}>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst View = ({data}) => {\n\tconst {name, description, thumbnail, homepage, wiki} = data;\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img src={thumbnail}\n\t\t\t\tstyle={thumbnail?.match('image_not_available.jpg') ? {objectFit: 'contain'} : null}\n\t\t\t\talt=\"Random character\"\n\t\t\t\tclassName=\"randomchar__img\"/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">{description ? description : 'Описание отсутствует'}</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef, useMemo } from 'react';\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn <Spinner/>;\n\t\tcase 'loading':\n\t\t\treturn newItemLoading ? <Component/> : <Spinner/>;\n\t\tcase 'confirmed':\n\t\t\treturn <Component/>;\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage/>;\n\t\tdefault:\n\t\t\tthrow new Error('Unexpected process state');\n\t}\n}\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst { clearError, process, setProcess, getAllCharacters } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tclearError();\n\t\tsetNewItemLoading(!initial);\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t}\n\n\tconst onCharListLoaded = (newCharList = []) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList(charList => [...charList, ...newCharList]);\n\t\tsetNewItemLoading(false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(ended);\n\t}\n\n\tconst itemRefs = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n\t\titemRefs.current[id].classList.add('char__item_selected');\n\t\titemRefs.current[id].focus();\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = {'objectFit' : 'cover'};\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t\t\timgStyle = {'objectFit' : 'unset'};\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<CSSTransition key={i} in={true} timeout={1000} classNames='char__item' >\n\t\t\t\t\t<li className=\"char__item\"\n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\tref={(el) => itemRefs.current[i] = el}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyDown={e => {\n\t\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<TransitionGroup component={'ul'} className='char__grid' >\n\t\t\t\t{items}\n\t\t\t</TransitionGroup>\n\t\t);\n\t}\n\n\t// const items = renderItems(charList);\n\n\t// const errorMessage = error ? <ErrorMessage/> : null;\n\t// const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\tconst elements = useMemo(() => {\n\t\treturn setContent(process, () => renderItems(charList), newItemLoading);\n\t}, [process]);\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{ elements }\n\t\t\t{/* {errorMessage}\n\t\t\t{spinner}\n\t\t\t{items} */}\n\t\t\t<button\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{display: charEnded ? 'none' : 'block'}}\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default CharList;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = useState(null);\n\n\tconst { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n\tuseEffect(() => updateChar(), []);\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, [props.charId]);\n\n\tconst updateChar = () => {\n\t\tif (!props.charId) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearError();\n\t\tgetCharacter(props.charId)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t}\n\t\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t}\n\n\t// const skeleton = char || loading || error ? null : <Skeleton/>;\n\t// const errorMessage = error ? <ErrorMessage/> : null;\n\t// const spinner = loading ? <Spinner/> : null;\n\t// const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n\treturn (\n\t\t<div className=\"char__info\">\n\t\t\t{\n\t\t\t\tsetContent(process, View, char)\n\t\t\t}\n\t\t\t{/* {skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content} */}\n\t\t</div>\n\t)\n}\n\nconst View = ({data}) => {\n\tconst {name, description, thumbnail, homepage, wiki, comics} = data;\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={thumbnail}\n\t\t\t\t\talt={name}\n\t\t\t\t\tstyle={thumbnail?.match('image_not_available.jpg') ? {objectFit: 'contain'} : null}/>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">Homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">\n\t\t\t\t{description}\n\t\t\t</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t{comics?.length > 0 ? null : 'There is no comics with this character'}\n\t\t\t\t\t{\n\t\t\t\t\t\tcomics?.slice(0, 10).map((item, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Link key={i} className=\"char__comics-item\" to={`/comics/${item.resourceURI.match(/\\d*$/)}`}>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n\nCharInfo.propTypes = {\n    \tcharId: PropTypes.number\n};\n\nexport default CharInfo;","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './searchForm.scss';\r\n\r\nconst SearchForm = () => {\r\n\tconst  [ charList, setCharList ]  = useState(null);\r\n\tconst { clearError, getCharactersByNameStart, process, setProcess } = useMarvelService();\r\n\r\n\tconst onCharsLoaded = charList => {\r\n\t\tsetCharList(charList);\r\n\t}\r\n\r\n\tconst updateCharList = name => {\r\n\t\tclearError();\r\n\t\tgetCharactersByNameStart(name)\r\n\t\t.then(onCharsLoaded)\r\n\t\t.then(() => setProcess('confirmed'));\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues = {{\r\n\t\t\t\tname: ''\r\n\t\t\t}}\r\n\t\t\tvalidationSchema = {\r\n\t\t\t\tYup.object({\r\n\t\t\t\t\tname: Yup.string()\r\n\t\t\t\t\t\t\t.required('This field is required')\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tonSubmit = {\r\n\t\t\t\t({ name }) => {\r\n\t\t\t\t\tupdateCharList(name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Form className='search-form'>\r\n\t\t\t\t<label className=\"search-form__title\" htmlFor='name'>\r\n\t\t\t\t\tOr find a character by name:\r\n\t\t\t\t</label>\r\n\t\t\t\t<Field \r\n\t\t\t\t\tclassName='search-form__input'\r\n\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\tid='name'\r\n\t\t\t\t\tname='name'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t/>\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName='search-form__btn button button__main'\r\n\t\t\t\t\ttype='submit'\r\n\t\t\t\t\tdisabled={process === 'loading'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"inner\">FIND</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t{/* { successBlock }\r\n\t\t\t\t{ errorMessage }\r\n\t\t\t\t{ notFoundMessage } */}\r\n\t\t\t\t{setContent(process, SuccessBlock, charList, Message, charList)}\r\n\t\t\t\t<ErrorMessage \r\n\t\t\t\t\tclassName='search-form__message search-form__message_error' \r\n\t\t\t\t\tname='name' \r\n\t\t\t\t\tcomponent='div' \r\n\t\t\t\t/>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n}\r\n\r\nconst Message = ({text, typeOfMessage}) => {\r\n\treturn (\r\n\t\t<div className={`search-form__message search-form__message_${typeOfMessage}`}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst SuccessBlock = ({ data }) => {\r\n\treturn (\r\n\t\t<div className=\"search-form__list\">\r\n\t\t\t{\r\n\t\t\t\tdata.map((char, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link key={i} to={`/characters/${char.id}`}>\r\n\t\t\t\t\t\t\t<div className=\"search-form__list-item\">\r\n\t\t\t\t\t\t\t\t<img src={char.thumbnail} alt={char.name} className=\"search-form__list-item-img\" />\r\n\t\t\t\t\t\t\t\t<div className=\"search-form__list-item-name\">{char.name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst setContent = (process, Component, data, Message, charList) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn null;\r\n\t\tcase 'loading':\r\n\t\t\treturn null;\r\n\t\tcase 'confirmed':\r\n\t\t\treturn charList\r\n\t\t\t\t? <Component data={data}/> \r\n\t\t\t\t: <Message \r\n\t\t\t\t\ttext='The character was not found. Check the name and try again' \r\n\t\t\t\t\ttypeOfMessage='error' \r\n\t\t\t\t/>;\r\n\t\tcase 'error':\r\n\t\t\treturn <Message \r\n\t\t\t\t\ttext='Fetch error' \r\n\t\t\t\t\ttypeOfMessage='error' />;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nexport default SearchForm;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport SearchForm from \"../searchForm/SearchForm\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst Characters = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Marvel information portal\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Marvel information portal</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={selectedChar}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<SearchForm />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Characters;"],"sourceRoot":""}